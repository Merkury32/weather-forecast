{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/daily/daily.component.ts","webpack:///src/app/daily/daily.component.html","webpack:///src/app/service/weather.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","DailyComponent","weatherService","getData","subscribe","data","console","log","currentTemperature","temp","currentFeelsTemperature","feels_like","currentWeather","weather","description","http","get","apiKey","pipe","responseData","postsArray","key","hasOwnProperty","push","providedIn","environment","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather-forecast';\n}\n","<app-daily></app-daily>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DailyComponent } from './daily/daily.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, DailyComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { weatherService } from '../service/weather.service';\n\n@Component({\n  selector: 'app-daily',\n  templateUrl: './daily.component.html',\n  styleUrls: ['./daily.component.scss'],\n})\nexport class DailyComponent implements OnInit {\n  constructor(private weatherService: weatherService) {}\n\n  currentTemperature: number;\n  currentFeelsTemperature: number;\n  currentWeather;\n\n  ngOnInit() {\n    this.weatherService.getData().subscribe((data) => {\n      console.log(data);\n\n      this.currentTemperature = data[4].temp;\n      this.currentFeelsTemperature = data[4].feels_like;\n      this.currentWeather = data[4].weather[0].description;\n    });\n  }\n}\n","<p>daily works!</p>\n<h2>{{currentTemperature}}</h2>\n<h2>{{currentFeelsTemperature}}</h2>\n<h2>{{currentWeather}}</h2>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class weatherService {\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http\n      .get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=52.0887&lon=17.01506&units=metric&exclude=daily,hourly,weekly,minutely&appid=${environment.apiKey}`\n      )\n      .pipe(\n        map((responseData) => {\n          const postsArray = [];\n          for (const key in responseData) {\n            if (responseData.hasOwnProperty(key)) {\n              postsArray.push({ ...responseData[key], id: key });\n            }\n          }\n          return postsArray;\n        })\n      );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiKey: 'bc1f103d0825160fc4ecba0adc35009a',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}